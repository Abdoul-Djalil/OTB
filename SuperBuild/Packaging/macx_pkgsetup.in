#!/bin/sh

cd `dirname $0`

# NOTE: $OUT_DIR is also used in make_sylinks script (see below)
# Avoid any pre-mature optimization on variable names here.
OUT_DIR=`pwd`

# find install_name_tool
INSTALL_NAME_TOOL=`which install_name_tool`
if [ -z "$INSTALL_NAME_TOOL" ]; then
    echo "install_name_tool does not exists.."
    echo "please install install_name_tool and make sure it can be found from PATH"
    exit 1;
fi

# no interference with DYLD_LIBRARY_PATH and DYLD_FALLBACK_LIBRARY_PATH
DYLD_LIBRARY_PATH=
DYLD_FALLBACK_LIBRARY_PATH=

echo "Configuring..."
BINARY_FILES="@VAR_IN_PKGSETUP_CONFIGURE@"
# #add rpath to LC_RPATH using install_name_tool
for bin_file in $BINARY_FILES; do
    #echo "adding rpath to $OUT_DIR/$bin_file"
    if [ -f $OUT_DIR/$bin_file ]; then
       $INSTALL_NAME_TOOL -add_rpath "$OUT_DIR/lib" "$OUT_DIR/$bin_file"
    fi
done

# echo "Creating symbolic links..."
. ./make_symlinks

if [ -f lib/cmake/ITK-@ITK_VERSION_STRING@/ITKConfig.cmake ]; then
    rm -fr $OUT_DIR/bin/*
    sed -i "s,@CMAKE_INSTALL_PREFIX@,$OUT_DIR,g" lib/cmake/ITK-@ITK_VERSION_STRING@/Modules/ITKZLIB.cmake
    sed -i "s,@CMAKE_INSTALL_PREFIX@,$OUT_DIR,g" lib/cmake/ITK-@ITK_VERSION_STRING@/ITKConfig.cmake
    sed -i "s,@CMAKE_INSTALL_PREFIX@,$OUT_DIR,g" lib/cmake/ITK-@ITK_VERSION_STRING@/ITKTargets-release.cmake
fi

rm -fr $OUT_DIR/tools

rm -f $OUT_DIR/pkgsetup

rm -f $OUT_DIR/make_symlinks
