#!/bin/sh

DIRNAME_0=$(dirname "$0")
cd  "$DIRNAME_0"

# NOTE: $OUT_DIR is also used in make_sylinks script (see below)
# Avoid any pre-mature optimization on variable names here.

OUT_DIR=$(pwd)

PATCH_ELF_EXE="$OUT_DIR/patchelf"

#do not move below 3 lines. it must be before  "unset LD_LIBRARY_PATH" code
sed -i -E  "s,OUT_DIR,$OUT_DIR,g" "$OUT_DIR/setup_python.sh"
chmod +x $OUT_DIR/setup_python.sh
./setup_python.sh


# No no interference with LD_LIBRARY_PATH
unset LD_LIBRARY_PATH

#see next call below for otb applications
BINARY_FILES=$(find $OUT_DIR/lib $OUT_DIR/bin $OUT_DIR/lib/otb/applications  -maxdepth 1 -type f -exec file {} \; | grep -i elf|cut -f1 -d':')
# run patchelf
for bin_file in $BINARY_FILES; do
    #echo "adding rpath to $bin_file"
    if [ -f "$bin_file" ]; then
        "$PATCH_ELF_EXE" "--set-rpath" "$OUT_DIR/lib" "$bin_file"
    fi
done
otb_python_lib=$OUT_DIR/lib/python/_otbApplication.so
if [ -f "$otb_python_lib" ]; then
    "$PATCH_ELF_EXE" "--set-rpath" "$OUT_DIR/lib" "$otb_python_lib"
fi

sed -i -E  "s,OUT_DIR,$OUT_DIR,g" "$OUT_DIR/monteverdi.sh"
chmod +x "$OUT_DIR/monteverdi.sh"

sed -i -E "s,OUT_DIR,$OUT_DIR,g" "$OUT_DIR/mapla.sh"
chmod +x "$OUT_DIR/mapla.sh"

sed -i -E "s,OUT_DIR,$OUT_DIR,g" "$OUT_DIR/otbenv.profile"
chmod +x "$OUT_DIR/otbenv.profile"

cat > "$OUT_DIR/bin/qt.conf" << EOF
[Paths]
Translations=$OUT_DIR/lib/qt4/translations
Plugins=$OUT_DIR/lib/qt4/plugins

EOF


#echo "Creating symbolic links..."
. ./make_symlinks

rm -f  "$OUT_DIR/make_symlinks"


printf %s\\n ""
printf %s\\n "You MUST source './otbenv.profile' file to use OTB. see next line:"
printf %s\\n ". $OUT_DIR/otbenv.profile"
printf %s\\n "The changes to environment variables from ./otbenv.profile only affect current session."
printf %s\\n "You can also copy above line to  ~/.profile to keep those changes permanently!"
printf %s\\n "More documentation can be found in $OUT_DIR/README"


rm -f  "$OUT_DIR/patchelf"
rm -f  "$OUT_DIR/setup_python.sh"
rm -f  "$OUT_DIR/pkgsetup"
